allprojects {
    repositories {
        jcenter()
    }
}

ext {
    //Android
    androidBuildToolsVersion = "26.0.2"
    androidMinSdkVersion = 15
    androidTargetSdkVersion = 26
    androidCompileSdkVersion = 26

    //Libraries
    kotlinVersion = '1.2.0'
    rxKotlinVersion = '2.1.0'
    javaxInjectVersion = '1'
    gsonVersion = '2.8.1'
    okHttpVersion = '3.8.1'
    retrofitVersion = '2.3.0'
    roomVersion = '1.0.0-alpha9-1'

    //Testing
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoKotlinVersion = '1.5.0'
    robolectricVersion = '3.4.2'

    domainDependencies = [
            kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    domainTestDependencies = [
            junit  : "junit:junit:${jUnitVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    dataDependencies = [
            rxKotlin   : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin     : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    remoteDependencies = [
            rxKotlin         : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin           : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxInject      : "javax.inject:javax.inject:${javaxInjectVersion}",
            okHttp           : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit         : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            gson             : "com.google.code.gson:gson:${gsonVersion}",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter  : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]


    cacheDependencies = [
            rxKotlin    : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin      : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxInject : "javax.inject:javax.inject:${javaxInjectVersion}",
            roomRuntime : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler: "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava  : "android.arch.persistence.room:rxjava2:${roomVersion}"
    ]

    cacheTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting: "android.arch.persistence.room:testing:${roomVersion}",
            archTesting: "android.arch.core:core-testing:${roomVersion}",
    ]


    presentationDependencies = [
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            archRuntime       : "android.arch.lifecycle:runtime:${roomVersion}",
            archExtensions    : "android.arch.lifecycle:extensions:${roomVersion}",
            archCompiler      : "android.arch.lifecycle:compiler:${roomVersion}",
    ]

    presentationTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]
}